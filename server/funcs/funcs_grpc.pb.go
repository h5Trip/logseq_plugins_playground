// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: funcs.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FuncsClient is the client API for Funcs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FuncsClient interface {
	DownloadImageToSave(ctx context.Context, in *DownloadImageRequest, opts ...grpc.CallOption) (*DownloadImageRespond, error)
}

type funcsClient struct {
	cc grpc.ClientConnInterface
}

func NewFuncsClient(cc grpc.ClientConnInterface) FuncsClient {
	return &funcsClient{cc}
}

func (c *funcsClient) DownloadImageToSave(ctx context.Context, in *DownloadImageRequest, opts ...grpc.CallOption) (*DownloadImageRespond, error) {
	out := new(DownloadImageRespond)
	err := c.cc.Invoke(ctx, "/Funcs/downloadImageToSave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FuncsServer is the server API for Funcs service.
// All implementations must embed UnimplementedFuncsServer
// for forward compatibility
type FuncsServer interface {
	DownloadImageToSave(context.Context, *DownloadImageRequest) (*DownloadImageRespond, error)
	mustEmbedUnimplementedFuncsServer()
}

// UnimplementedFuncsServer must be embedded to have forward compatible implementations.
type UnimplementedFuncsServer struct {
}

func (UnimplementedFuncsServer) DownloadImageToSave(context.Context, *DownloadImageRequest) (*DownloadImageRespond, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DownloadImageToSave not implemented")
}
func (UnimplementedFuncsServer) mustEmbedUnimplementedFuncsServer() {}

// UnsafeFuncsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FuncsServer will
// result in compilation errors.
type UnsafeFuncsServer interface {
	mustEmbedUnimplementedFuncsServer()
}

func RegisterFuncsServer(s grpc.ServiceRegistrar, srv FuncsServer) {
	s.RegisterService(&Funcs_ServiceDesc, srv)
}

func _Funcs_DownloadImageToSave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FuncsServer).DownloadImageToSave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Funcs/downloadImageToSave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FuncsServer).DownloadImageToSave(ctx, req.(*DownloadImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// Funcs_ServiceDesc is the grpc.ServiceDesc for Funcs service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Funcs_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Funcs",
	HandlerType: (*FuncsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "downloadImageToSave",
			Handler:    _Funcs_DownloadImageToSave_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "funcs.proto",
}
